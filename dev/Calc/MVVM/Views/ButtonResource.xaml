<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    
    <Style x:Key="ButtonStyle" TargetType="Button">
        <Setter Property="Height" Value="25"/>
        <Setter Property="Background" Value="WhiteSmoke"/>
        <Setter Property="BorderBrush" Value="Silver"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4">
                        <Grid>
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                <Grid x:Name="ImageGrid" Width="15" Height="15">
                                    <Image  x:Name="Image"
                                            Source="{Binding Uid, RelativeSource={RelativeSource TemplatedParent}}"
                                            Stretch="Uniform"/>
                                    <Rectangle x:Name="ImageInvert" Fill="White" Opacity="0">
                                        <Rectangle.OpacityMask>
                                            <VisualBrush Visual="{Binding ElementName=Image}"/>
                                        </Rectangle.OpacityMask>
                                    </Rectangle>
                                </Grid>
                                <TextBlock x:Name="ContentText"
                                            Text="{TemplateBinding Content}"
                                            VerticalAlignment="Center"
                                           HorizontalAlignment="Center"/>
                            </StackPanel>
                            <TextBlock x:Name="PlaceholderText" 
                                       Foreground="DimGray"
                                        Text="{TemplateBinding Tag}"
                                        VerticalAlignment="Center"
                                        HorizontalAlignment="Center"
                                        FontWeight="Regular"
                                        IsHitTestVisible="False"
                                        Visibility="Collapsed"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>

                        <Trigger Property="Content" Value="{x:Null}">
                            <Setter TargetName="PlaceholderText" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ContentText" Property="Visibility" Value="Collapsed"/>
                        </Trigger>

                        <Trigger Property="Uid" Value="">
                            <Setter TargetName="ImageGrid" Property="Visibility" Value="Collapsed"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="PlaceholderText" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="border" Property="Background" Value="white"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="LightGray"/>
                            <Setter Property="Foreground" Value="LightGray"/>
                            <Setter TargetName="Image" Property="Opacity" Value="0.2"/>
                            <Setter TargetName="ImageInvert" Property="Opacity" Value="1"/>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="LightGray"/>
                            
                        </Trigger>
                        
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#404040"/>
                            <Setter Property="Foreground" Value="White"/>
                            <Setter TargetName="Image" Property="Opacity" Value="1"/>
                            <Setter TargetName="ImageInvert" Property="Opacity" Value="1"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="UnitButtonStyle" TargetType="Button">
        <Setter Property="IsEnabled" Value="False"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Black"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Margin="2"
                            CornerRadius="2">
                        <Grid VerticalAlignment="Center">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="15"/>
                                <RowDefinition Height="15"/>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Row="0" 
                                       Text="{TemplateBinding Tag}" 
                                       FontWeight="SemiBold" 
                                       TextAlignment="Center"/>
                            <ContentPresenter Content="{Binding AmountString}"
                                              Grid.Row="1" 
                                              HorizontalAlignment="Center" 
                                              VerticalAlignment="Center"/>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>

                        <DataTrigger Binding="{Binding IsNormalizable}" Value="True">
                            <Setter Property="IsEnabled" Value="True"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding IsNormalizer}" Value="True">
                            <Setter Property="BorderThickness" Value="1"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding IsUsed}" Value="False">
                            <Setter Property="Foreground" Value="Gray"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding WarningActive}" Value="True">
                            <Setter Property="Foreground" Value="Crimson"/>
                        </DataTrigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderThickness" Value="1"/>
                            <Setter Property="Foreground" Value="Black"/>
                        </Trigger>
                        
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="BorderThickness" Value="2"/>
                            <Setter Property="Foreground" Value="Black"/>

                        </Trigger>


                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="ExpanderToggleButton" TargetType="ToggleButton">
        <Border x:Name="border" 
            Background="WhiteSmoke" 
            BorderBrush="Silver" 
            BorderThickness="1"
            CornerRadius="4"
            Width="25" Height="25">
            <Grid>
                <Image  x:Name="Image"
                        Source="{Binding Tag, RelativeSource={RelativeSource TemplatedParent}}"
                        Width="15" Height="15"/>
               
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="border" Property="Background" Value="LightGray"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="border" Property="Background" Value="Silver"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <Style x:Key="ExpanderStyle" TargetType="Expander">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Expander">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="0"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <ToggleButton x:Name="ExpanderButton"
                                  Grid.Column="0"
                                  ClickMode="Press"
                                  VerticalAlignment="Top"
                                  Margin="-45,40,0,0"
                                  Tag="{Binding Uid, RelativeSource={RelativeSource TemplatedParent}}"
                                  IsChecked="{Binding IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                                  OverridesDefaultStyle="True"
                                  Template="{StaticResource ExpanderToggleButton}"/>
                        <ContentPresenter x:Name="ExpanderContent"
                                      Grid.Column="1"
                                      Visibility="Collapsed"
                                      Content="{TemplateBinding Content}"
                                      ContentTemplate="{TemplateBinding ContentTemplate}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="ExpanderContent" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="ExpandDirection" Value="Right">
                            <Setter TargetName="ExpanderButton" Property="DockPanel.Dock" Value="Left"/>
                            <Setter TargetName="ExpanderContent" Property="DockPanel.Dock" Value="Right"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>




</ResourceDictionary>
