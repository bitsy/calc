<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">


    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="ButtonResource.xaml"/>
    </ResourceDictionary.MergedDictionaries>


    <Style x:Key="ButtonStyle" TargetType="Button">
        <Setter Property="Height" Value="25"/>
        <Setter Property="Background" Value="WhiteSmoke"/>
        <Setter Property="BorderBrush" Value="Silver"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="border" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            Background="{TemplateBinding Background}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="border" Property="Background" Value="white"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="LightGray"/>
                            <Setter Property="Foreground" Value="LightGray"/>
                        </Trigger>

                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="LightGray"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="Silver"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TreeViewItemStyle" TargetType="TreeViewItem">
        <Style.Resources>
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Transparent" />
            <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black" />
            <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="Transparent" />
            <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}" Color="Black" />
        </Style.Resources>
    </Style>

    <Style x:Key="NumberColumn" TargetType="TextBlock">
        <Setter Property="HorizontalAlignment" Value="Right" />
    </Style>

    <Style x:Key="MappingErrorButtonStyle" TargetType="Button"  BasedOn="{StaticResource ButtonStyle}">
        <Setter Property="Content" Value="👌"/>
        <Setter Property="FontSize" Value="14"/>

        <Style.Triggers>
            <DataTrigger Binding="{Binding MappingErrorVM.BrokenSectionVisibility}" Value="Visible">
                <Setter Property="BorderBrush" Value="SeaGreen"/>
                <Setter Property="Foreground" Value="SeaGreen"/>
                <Setter Property="BorderThickness" Value="2"/>
            </DataTrigger>

            <DataTrigger Binding="{Binding MappingErrorVM.HasBrokenItems}" Value="True">
                <Setter Property="BorderBrush" Value="Crimson"/>
                <Setter Property="Content" Value="💬"/>
                <Setter Property="Foreground" Value="Crimson"/>
            </DataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding MappingErrorVM.HasBrokenItems}" Value="True"/>
                    <Condition Binding="{Binding MappingErrorVM.BrokenSectionVisibility}" Value="Collapsed"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Background" Value="Crimson"/>
                <Setter Property="Foreground" Value="White"/>
            </MultiDataTrigger>

        </Style.Triggers>
    </Style>

    <Style x:Key="MappingErrorBorderStyle" TargetType="Border">
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="BorderBrush" Value="SeaGreen"/>
        <Setter Property="CornerRadius" Value="4"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding MappingErrorVM.HasBrokenItems}" Value="True">
                <Setter Property="BorderBrush" Value="Crimson"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MappingErrorPathStyle" TargetType="Path">
        <Setter Property="Stroke" Value="SeaGreen"/>
        <Setter Property="StrokeThickness" Value="2"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding MappingErrorVM.HasBrokenItems}" Value="True">
                <Setter Property="Stroke" Value="Crimson"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="MappingErrorTextStyle" TargetType="TextBlock">
        <Setter Property="Text" Value="All Mappings Clear 😃"/>
        <Setter Property="Foreground" Value="SeaGreen"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding MappingErrorVM.HasBrokenItems}" Value="True">
                <Setter Property="Text" Value="Missing Mappings:"/>
                <Setter Property="Foreground" Value="Crimson"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <DataTemplate x:Key="BranchItemTemplate">
        <StackPanel Orientation="Horizontal"
                    Margin="-6,0,0,0">
            <Grid>
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Setter Property="Visibility" Value="Hidden"/>
                        <Setter Property="Margin" Value="1,0,0,0"/>
                        <Setter Property="Width" Value="12"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Host.HasCalculationErrors}" Value="True">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                <TextBlock Text="💔"
                           FontSize="10"
                           FontWeight="SemiBold"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Center"
                           Foreground="Crimson"/>
            </Grid>

            <Grid Margin="4,0,0,0">
                <Grid.Style>
                    <Style TargetType="Grid">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsBranch}" Value="True">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Grid.Style>
                <Rectangle Stroke="Gray"
                           StrokeThickness="1"
                           Margin="0,6,0,5"
                           RadiusX="4"
                           RadiusY="4">
                    <Rectangle.Style>
                        <Style TargetType="Rectangle">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding BranchParameterIsInstance}" Value="True">
                                    <Setter Property="StrokeDashArray" Value="2,2"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Rectangle.Style>
                </Rectangle>
                <TextBlock Text="{Binding BranchParameterName}" VerticalAlignment="Center" FontSize="10" Margin="2"/>
            </Grid>

            <Border x:Name="LabelBorder"
                Padding="4,2,4,3"
                Margin="4,2,2,2"
                CornerRadius="4">

                <Border.Background>
                    <SolidColorBrush Color="{Binding LabelColor}"/>
                </Border.Background>

                <StackPanel Orientation="Vertical">
                    <TextBlock x:Name="txtName">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Setter Property="Text" Value="{Binding Name}" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type TreeViewItem}}, Path=IsSelected}" Value="True">
                                        <Setter Property="FontWeight" Value="Bold" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>

                    <Grid Height="3">
                        <Border x:Name="Underline"
                            Height="3" 
                            VerticalAlignment="Bottom" 
                            CornerRadius="2" 
                            Visibility="{Binding UnderlineVisibility}">
                            <Border.Background>
                                <SolidColorBrush Color="{Binding IdentifierColor}"/>
                            </Border.Background>
                        </Border>
                    </Grid>
                </StackPanel>
            </Border>

            <TextBlock Text="{Binding Host.Elements.Count}"
                       VerticalAlignment="Center"
                       FontSize="11"
                       Margin="5,0,0,0"
                       Foreground ="Gray">
                <TextBlock.Style>
                    <Style TargetType="TextBlock">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding IsBrokenNode}" Value="True">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </TextBlock.Style>
            </TextBlock>


        </StackPanel>
    </DataTemplate>

    <Style TargetType="TabItem" x:Key="TabItemStyle">
        
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding Name}"
                               ToolTip="{Binding Name}"
                               TextWrapping="NoWrap" 
                               MaxWidth="200"
                               TextTrimming="CharacterEllipsis"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        
        <Style.Triggers>
            <DataTrigger Binding="{Binding}" Value="{x:Null}">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=Name}" Value="{x:Null}">
                <Setter Property="Visibility" Value="Collapsed"/>
            </DataTrigger>
        </Style.Triggers>
        
    </Style>

    <Style TargetType="DataGrid" x:Key="DataGridStyle">

        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=ItemsSource, RelativeSource={RelativeSource Self}}" Value="{x:Null}">
                <Setter Property="HeadersVisibility" Value="None"/>
            </DataTrigger>
        </Style.Triggers>

        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="HorizontalGridLinesBrush" Value="Transparent"/>
        <Setter Property="VerticalGridLinesBrush" Value="LightGray"/>
        <Setter Property="HorizontalScrollBarVisibility" Value="Disabled"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="RowHeaderWidth" Value="0"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="IsTabStop" Value="False"/>


        <Setter Property="ColumnHeaderStyle">
            <Setter.Value>
                <Style TargetType="{x:Type DataGridColumnHeader}">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="FontWeight" Value="SemiBold"/>
                </Style>
            </Setter.Value>
        </Setter>

        <Setter Property="RowStyle">
            <Setter.Value>
                <Style TargetType="{x:Type DataGridRow}">
                    <Setter Property="Background" Value="Transparent"/>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ResultDataGridStyle" TargetType="DataGrid" BasedOn="{StaticResource DataGridStyle}">
        <Setter Property="Visibility" Value="Collapsed"/>
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding CalculationVM.HasErrors}" Value="False"/>
                    <Condition Binding="{Binding CalculationVM.HasResults}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Visibility" Value="Visible"/>
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ErrorDataGridStyle" TargetType="DataGrid" BasedOn="{StaticResource DataGridStyle}">
        <Setter Property="Visibility" Value="Collapsed"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding CalculationVM.HasErrors}" Value="True">
                <Setter Property="Visibility" Value="Visible"/>
            </DataTrigger>
        </Style.Triggers>
    </Style>


</ResourceDictionary>
