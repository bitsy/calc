<Window x:Class="Calc.ConnectorRevit.Views.MainView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Calc.ConnectorRevit.ViewModels" 
        xmlns:gif="http://wpfanimatedgif.codeplex.com"
        xmlns:conv="clr-namespace:Calc.ConnectorRevit.Views.Converters"

        d:DataContext="{d:DesignInstance Type=local:MainViewModel}"
        Loaded="WindowLoaded"
        Closing="WindowClosing"
        mc:Ignorable="d" 
        Background="White"
        Height="700" MinHeight="700"
        Width="700" MinWidth="700"
        WindowStartupLocation="CenterScreen"
        Topmost="True">

    <Window.Resources>
        <ResourceDictionary>
            <conv:TagToBoolConverter x:Key="TagToBoolConverter"/>

            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="MainViewResources.xaml"/>
                <ResourceDictionary Source="ToggleButtonResource.xaml"/>
            </ResourceDictionary.MergedDictionaries>
        </ResourceDictionary>
    </Window.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="507*"/>
            <ColumnDefinition Width="193*"/>
        </Grid.ColumnDefinitions>

        <Grid Grid.ColumnSpan="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="400"/>
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="22"/>
                <RowDefinition Height="50"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="40"/>
            </Grid.RowDefinitions>
            <Label Content="Forest:"
                   Padding="10,6,0,0"
                   FontWeight="SemiBold"/>

            <DockPanel x:Name="ForestPanel"
                        Grid.Column="0"
                       Grid.Row="1"
                       Margin="10"
                       HorizontalAlignment="Stretch">
                <ComboBox x:Name="ForestsComboBox"
                          ItemsSource="{Binding DataContext.Store.ForestProjectRelated, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                          DisplayMemberPath="Name"
                          DockPanel.Dock="Left"
                          Height="25"
                          SelectionChanged="ForestSelectionChanged"
                          HorizontalAlignment="Stretch"/>
            </DockPanel>
            
            <Grid x:Name="TreeViewGrid"
                  Grid.Column="0"
                  Grid.Row="2"
                  Margin="10">
                <TreeView x:Name="TreeView"
                      ItemsSource="{Binding NodeTreeVM.NodeSource}"
                      TreeViewItem.Selected="TreeViewItemSelected"
                      MouseLeftButtonDown="SideClickDown"
                      ItemContainerStyle="{StaticResource TreeViewItemStyle}">
                    <TreeView.ItemTemplate>
                        <HierarchicalDataTemplate ItemsSource="{Binding SubNodeItems}">
                            <ContentControl Content="{Binding}"
                                            
                                        ContentTemplate="{StaticResource BranchItemTemplate}">
                                <ContentControl.ToolTip>
                                    <TextBlock Text="{Binding Host.Buildup}"/>
                                </ContentControl.ToolTip>
                            </ContentControl>
                        </HierarchicalDataTemplate>
                    </TreeView.ItemTemplate>
                </TreeView>
            </Grid>

            <Label Grid.Column="1" 
                   Content="Mapping:" 
                   Padding="10,6,0,0"
                   FontWeight="SemiBold"/>
            
            <DockPanel x:Name="MappingPanel"
                       Grid.Column="2"
                       Grid.Row="1"
                       Margin="10"
                       HorizontalAlignment="Stretch"
                       LastChildFill="True">
                <Button Content="Update" 
                        Width="50" 
                        Click="UpdateMappingClicked"
                        Height="25"
                        DockPanel.Dock="Right"/>
                <Button Content="New" 
                        Width="50"
                        Height="25"
                        Margin="10,0,10,0"
                        Click="NewMappingClicked"
                        DockPanel.Dock="Right"/>
                <ComboBox x:Name="MappingsComboBox"
                          ItemsSource="{Binding DataContext.Store.MappingsProjectRelated, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                          SelectedItem="{Binding DataContext.Store.MappingSelected, RelativeSource={RelativeSource AncestorType={x:Type Window}}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          DisplayMemberPath="Name"
                          DockPanel.Dock="Left"
                          Height="25"
                          SelectionChanged="MappingSelectionChanged"/>
            </DockPanel>

            

            <DockPanel x:Name="BuildupPanel"
                        Grid.Column="2"
                        Grid.Row="2"
                        Margin="10">
                
                <Label Content="Buildups:"
                       Padding="0"
                       Margin="0,0,0,12"
                       DockPanel.Dock="Top"
                       FontWeight="SemiBold"/>

                <DockPanel DockPanel.Dock="Top"
                           Height="60">
                    <StackPanel DockPanel.Dock="Left"
                                Width="50"
                                Margin="0,0,10,0">
                        <Button Content="Follow"
                            Width="50"
                            Height="25"
                            Click="InheritClicked"/>

                        <Button Content="Remove"
                            Width="50"
                            Margin="0,5,0,0"
                            Height="25"
                            Click="RemoveClicked"/>
                    </StackPanel>

                    <DataGrid ItemsSource="{Binding DataContext.NodeTreeVM.SelectedNodeItem.Host.Buildups,
                                            RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                              AlternationCount="100"
                              AutoGenerateColumns="False"
                              HeadersVisibility="None"
                              BorderThickness="0"
                              Background="Transparent"
                              HorizontalAlignment="Stretch"
                              VerticalAlignment="Stretch"
                              HorizontalScrollBarVisibility="Disabled"
                              VerticalScrollBarVisibility="Disabled"
                              RowHeaderWidth="0"
                              GridLinesVisibility="None"
                              CanUserAddRows="{Binding DataContext.BuildupVM.UnderBuildupLimit, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                              >
                        <DataGrid.CellStyle>
                            <Style TargetType="DataGridCell">
                                <Setter Property="BorderThickness" Value="0"/>
                                <Setter Property="Height" Value="30"/>
                                <Style.Triggers>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Background" Value="{x:Null}"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.CellStyle>

                        <DataGrid.Columns>
                            <DataGridTemplateColumn Width="*">
                                <DataGridTemplateColumn.CellTemplate>
                                    <DataTemplate>
                                        <ComboBox Tag="{Binding RelativeSource={RelativeSource AncestorType=DataGridRow},
                                                        Path=(ItemsControl.AlternationIndex)}"
                                                ItemsSource="{Binding DataContext.Store.BuildupsAll,
                                                        RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                                                SelectedItem="{Binding .}"
                                                DisplayMemberPath="Name"
                                                Height="25"
                                                SelectionChanged="BuildupSelectionChanged"
                                                HorizontalAlignment="Stretch"
                                                VerticalAlignment="Top"/>
                                    </DataTemplate>
                                </DataGridTemplateColumn.CellTemplate>
                            </DataGridTemplateColumn>
                        </DataGrid.Columns>
                    </DataGrid>

                </DockPanel>

                <DataGrid ItemsSource="{Binding SelectedItem.Components, ElementName=BuildupsComboBox}"
                            AutoGenerateColumns="False"
                            DockPanel.Dock="Bottom"
                            Height="100"
                            HorizontalGridLinesBrush="LightGray"
                            VerticalGridLinesBrush="LightGray">
                    <DataGrid.ColumnHeaderStyle>
                        <Style TargetType="{x:Type DataGridColumnHeader}">
                            <Setter Property="FontWeight" Value="SemiBold"/>
                            <Setter Property="HorizontalContentAlignment" Value="Center"/>
                        </Style>
                    </DataGrid.ColumnHeaderStyle>
                    <DataGrid.Columns>
                        <DataGridTextColumn Header="Material" Binding="{Binding Material.Name}" />
                        <DataGridTextColumn Binding="{Binding FormattedAmount}" IsReadOnly="True" >
                            <DataGridTextColumn.Header>
                                <TextBlock Text="Amount" HorizontalAlignment="Right" Margin="0,0,0,0"/>
                            </DataGridTextColumn.Header>
                            <DataGridTextColumn.ElementStyle>
                                <StaticResource ResourceKey="NumberColumn"/>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Header="CO2e A123" Binding="{Binding FormattedKgCO2eA123}" IsReadOnly="True" >
                            <DataGridTextColumn.ElementStyle>
                                <StaticResource ResourceKey="NumberColumn"/>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Header="Cost" Binding="{Binding FormattedCost}" IsReadOnly="True" >
                            <DataGridTextColumn.ElementStyle>
                                <StaticResource ResourceKey="NumberColumn"/>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                    </DataGrid.Columns>
                </DataGrid>
            </DockPanel>
            
            <StackPanel x:Name="TogglePanel"
                        Grid.Column="0"
                        Grid.Row="3"
                        Orientation="Horizontal"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Left"
                        Margin="10,0,0,10">
                <TextBlock Text="Branch" FontSize="10" Margin="0,2,4,0"/>
                <ToggleButton x:Name="ViewToggleButton"
                                  Style="{StaticResource ToggleButtonStyle}" 
                                  Checked="ViewToggleButtonChecked"
                                  Unchecked="ViewToggleButtonUnchecked"/>
                <TextBlock Text="Buildup" FontSize="10" Margin="4,2,0,0"/>
            </StackPanel>
            <Button Grid.Column="0"
                    Grid.Row="3"
                    Content="Reload"
                    Margin="0,0,10,10"
                    Width="90"
                    Height="25"
                    Click="UpdateRevitClicked"
                    HorizontalAlignment="Right"
                    />

            <Grid Grid.Column="2"
                    Grid.Row="3">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Button Grid.Column="0" 
                        Content="Start CalcLive"
                        Height="25"
                        IsEnabled="False"
                        Click="StartCalcLiveClicked" Margin="10,0,5,10" />
                <Button Grid.Column="1"
                        Content="Save Results"
                        Height="25"
                        Click="SaveResultsClicked" Margin="5,0,10,10" />
            </Grid>

        </Grid>

        <Grid x:Name="ProjectOverlay"
              d:IsHidden="true"
              Background="LightGray"
              Margin="10,10,10,10"
              Visibility="{Binding DataContext.VisibilityVM.ProjectOverlayVisibility, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
              Grid.ColumnSpan="2">
            <StackPanel VerticalAlignment="Center">
                <TextBlock HorizontalAlignment="Center"
                            Text="Choose Project:"
                           Margin="10"/>
                <ComboBox x:Name="ProjectsComboBox"
                          HorizontalAlignment="Center"
                          ItemsSource= "{Binding LoadingVM.AllProjects}"
                          DisplayMemberPath="ProjectNumber"
                          Width="90"/>
                <Button Content="OK" 
                        HorizontalAlignment="Center"
                        Width="90"
                        Margin="10"
                        Click="ProjectOKClicked"/>
            </StackPanel>
        </Grid>
        
        <Grid x:Name="NewMappingOverlay"
             Background="LightGray"
              d:IsHidden="true"
             Margin="10,10,10,10"
             Visibility="{Binding DataContext.VisibilityVM.NewMappingOverlayVisibility, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
             Grid.ColumnSpan="2">
            <StackPanel VerticalAlignment="Center">

                <TextBlock Grid.Row="0"
                           HorizontalAlignment="Center"
                           Text="Mappings to duplicate:"/>

                <ListBox Grid.Row="1"
                         x:Name="MappingListBox"
                         HorizontalAlignment="Center"
                         Margin="10"
                         Width="180"
                         Height="180"
                         ScrollViewer.VerticalScrollBarVisibility="Auto"
                         SelectionChanged="MappingSelectionChanged"
                         ItemsSource="{Binding DataContext.NewMappingVM.MappingsListView, RelativeSource={RelativeSource AncestorType={x:Type Window}},UpdateSourceTrigger=PropertyChanged}">
                        <ListBox.GroupStyle>
                            <GroupStyle>
                                <GroupStyle.HeaderTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Name}" Foreground="Gray" />
                                    </DataTemplate>
                                </GroupStyle.HeaderTemplate>
                            </GroupStyle>
                        </ListBox.GroupStyle>
                        <ListBox.ItemTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding Name}"/>
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>      

                <TextBlock Grid.Row="2"
                           HorizontalAlignment="Center"
                           Text="New mapping name:"/>
                <TextBox Grid.Row="3"
                         Margin="10"
                         x:Name="NewNameText" 
                         MinWidth="90"
                         HorizontalAlignment="Center"
                         Text="{Binding DataContext.NewMappingVM.NewName, RelativeSource={RelativeSource AncestorType={x:Type Window}}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <Button Grid.Row="4"
                        HorizontalAlignment="Center"
                        Width="90"
                        Content="Confirm" 
                        Click="NewMappingConfirmed"/>
                <Button Grid.Row="4"
                        HorizontalAlignment="Center"
                        Margin="10"
                        Width="90"
                        Content="Cancel" 
                        Click="NewMappingCanceld"/>
            </StackPanel>
        </Grid>

        <Grid x:Name="WaitingOverlay"
             Background="LightGray"
             Margin="10,10,10,10"
             Visibility="{Binding DataContext.VisibilityVM.WaitingOverlayVisibility, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
             Grid.ColumnSpan="2"
              d:IsHidden="true">
            <StackPanel VerticalAlignment="Center">
                <TextBlock x:Name="WaitingTextBlock"
                    HorizontalAlignment="Center"
                    Text="{Binding DataContext.VisibilityVM.WaitingText, RelativeSource={RelativeSource AncestorType={x:Type Window}}, UpdateSourceTrigger=PropertyChanged}"/>
                           
                <Image gif:ImageBehavior.AnimatedSource="/CalcConnectorRevit2023;component/Resources/DT_logo.gif"
                       Width="90"
                       Margin="10"/>
                <Button Content="Quit" 
                        IsEnabled="False"
                    HorizontalAlignment="Center"
                    Width="90"
                    Click="ProjectOKClicked"/>
            </StackPanel>
        </Grid>

        <Grid x:Name="SavingOverlay"
             Background="LightGray"
             Margin="10,10,10,10"
             d:IsHidden="true"
             Visibility="{Binding DataContext.VisibilityVM.SavingOverlayVisibility, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
             Grid.ColumnSpan="2">
            <StackPanel VerticalAlignment="Center">
                <TextBlock HorizontalAlignment="Center"
                    Text="Save result name:"/>
                <TextBox x:Name="NewResultNameTextBox"
                        HorizontalAlignment="Center"
                        MinWidth="90"
                        Margin="10"/>
                <TextBlock HorizontalAlignment="Center"
                           Text="{Binding DataContext.VisibilityVM.SavingMessage, RelativeSource={RelativeSource AncestorType={x:Type Window}}, UpdateSourceTrigger=PropertyChanged}"/>
                <Button Content="Confirm" 
                    HorizontalAlignment="Center"
                    Width="90"
                    Margin="10"
                    Click="SaveResultOKClicked"/>
                <Button Content="Cancel" 
                    HorizontalAlignment="Center"
                    Width="90"
                    Click="SaveResultCancelClicked"/>
            </StackPanel>
        </Grid>

        <Grid x:Name="MessageOverlay"
             Background="LightGray"
             Margin="10,10,10,10"
             Visibility="{Binding DataContext.VisibilityVM.MessageOverlayVisibility, RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
             Grid.ColumnSpan="2"
              d:IsHidden="true">
            <StackPanel VerticalAlignment="Center">
                <TextBlock x:Name="MessageTextBlock"
                            Text="{Binding DataContext.VisibilityVM.MessageText, RelativeSource={RelativeSource AncestorType={x:Type Window}}, UpdateSourceTrigger=PropertyChanged}"
                            HorizontalAlignment="Center"/>
                <Button Content="OK" 
                    HorizontalAlignment="Center"
                    Width="90"
                    Margin="10"
                    Click="MessageOKClicked"/>
            </StackPanel>
        </Grid>

    </Grid>
</Window>